>> USER: I am interested in making a browser plugin for Edge Dev in order to make the box that I'm typing in now resizeable. Please write the code for that? Thanks

>> ASSISTANT: Creating a browser plugin for Microsoft Edge Dev (Chromium-based) involves creating a manifest file, a background script, a content script, and an optional icon. To make the text input area resizable, you'll be injecting a content script into the page. Here's a step-by-step guide on creating this extension:

1. Create a new folder for your extension, e.g., `resizable-textarea`.

2. In the folder, create a `manifest.json` file with the following content:

```json
{
  "manifest_version": 2,
  "name": "Resizable Textarea",
  "version": "1.0",
  "description": "Make text input areas resizable in Microsoft Edge Dev",
  "icons": {
    "48": "icon.png"
  },
  "permissions": [
    "activeTab"
  ],
  "browser_action": {
    "default_icon": {
      "48": "icon.png"
    },
    "default_title": "Toggle resizable textarea"
  },
  "content_scripts": [
    {
      "matches": ["<all_urls>"],
      "js": ["content-script.js"],
      "run_at": "document_end"
    }
  ],
  "background": {
    "scripts": ["background.js"],
    "persistent": false
  }
}
```

3. Create an optional icon file named `icon.png` (48x48) and place it in the extension folder.

4. Now, create a `content-script.js` file with the following code:

```javascript
function toggleResizableTextarea() {
  const textareas = document.querySelectorAll('textarea');
  
  textareas.forEach((textarea) => {
    const resizable = textarea.style.resize === 'both';
    textarea.style.resize = resizable ? 'none' : 'both';
  });
}

chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.action === 'toggleResizableTextarea') {
    toggleResizableTextarea();
    sendResponse({ success: true });
  }
});
```

5. Finally, create a `background.js` file with the following code:

```javascript
chrome.browserAction.onClicked.addListener((tab) => {
  chrome.tabs.sendMessage(tab.id, { action: 'toggleResizableTextarea' }, (response) => {
    if (chrome.runtime.lastError) {
      console.error(chrome.runtime.lastError);
    } else if (response && response.success) {
      console.log('Toggled resizable textarea');
    }
  });
});
```

6. To test your extension, open Microsoft Edge Dev, go to `edge://extensions`, enable "Developer mode" (toggle switch in the bottom-left corner), click on "Load unpacked," and select the `resizable-textarea` folder you created earlier.

Now, when you click on the extension's icon, it should toggle the resizability of all text input areas on the page.

>> USER: Thank you. I'm up to stage 6 and got the following error:

Failed to load extension

File
~/Documents/GitHub/Microsoft-Edge-Dev---Resizeable-Text-Input/resizable-textarea

ErrorManifest file is missing or unreadable

>> ASSISTANT: Apologies for the confusion. The error you're encountering could be due to an incorrect file path, a missing manifest file, or a corrupted manifest file. Please follow these steps to troubleshoot the issue:

1. Ensure the `manifest.json` file is located in the `resizable-textarea` folder, and the folder structure is as follows:

```
resizable-textarea/
|-- manifest.json
|-- icon.png (optional)
|-- content-script.js
`-- background.js
```

2. Double-check that the `manifest.json` file is named correctly (with no extra characters or spaces) and that the file extension is ".json".

3. Verify that the `manifest.json` file is readable and has the correct syntax. To do this, you can copy the content of your `manifest.json` file and paste it into an online JSON validator like [JSONLint](https://jsonlint.com/). The provided manifest content in my initial response should be valid.

4. If the problem persists, try restarting the Microsoft Edge Dev browser and reloading the extension. To do this, go to `edge://extensions`, disable "Developer mode" and enable it again, then click on "Load unpacked" and select the `resizable-textarea` folder again.

If you're still experiencing issues after trying these steps, please let me know, and I'll be happy to assist you further.

>> USER: Thank you I had mispelled the manifest.json file but I have fixed this now and the extension is working. I would like to add the following feature:

Instead of having to click on the extension icon in the toolbar, allow the user to right click on a text input box in order to give them the option to resize that text input box.

Could you please give me an 'idiot-proof' guide to amending my project in order to do this please? Could all of the code please be commented appropriately as well in any future responses? Thanks.

>> ASSISTANT: Certainly! To add a context menu item that allows users to right-click on a text input box and resize it, you'll need to modify the `background.js` file and slightly adjust the `content-script.js` file. Here's a step-by-step guide:

1. Replace the content of your `content-script.js` file with the following code:

```javascript
// Function to toggle the resizable property of a textarea element
function toggleResizableTextarea(textarea) {
  const resizable = textarea.style.resize === 'both';
  textarea.style.resize = resizable ? 'none' : 'both';
}

// Listen for messages from the background script
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.action === 'toggleResizableTextarea') {
    // Find the active textarea element
    const activeTextarea = document.activeElement;

    // If the active element is a textarea, toggle its resizable property
    if (activeTextarea && activeTextarea.tagName === 'TEXTAREA') {
      toggleResizableTextarea(activeTextarea);
      sendResponse({ success: true });
    }
  }
});
```

2. Replace the content of your `background.js` file with the following code:

```javascript
// Create a context menu item when the extension is installed
chrome.runtime.onInstalled.addListener(() => {
  chrome.contextMenus.create({
    id: 'toggle-resizable-textarea',
    title: 'Toggle resizable textarea',
    contexts: ['editable'], // Show the menu item only for editable elements
  });
});

// Listen for the context menu item click
chrome.contextMenus.onClicked.addListener((info, tab) => {
  if (info.menuItemId === 'toggle-resizable-textarea') {
    // Send a message to the content script to toggle the resizable property of the active textarea
    chrome.tabs.sendMessage(tab.id, { action: 'toggleResizableTextarea' }, (response) => {
      if (chrome.runtime.lastError) {
        console.error(chrome.runtime.lastError);
      } else if (response && response.success) {
        console.log('Toggled resizable textarea');
      }
    });
  }
});
```

3. Update the `permissions` field in your `manifest.json` file to include the `"contextMenus"` permission:

```json
"permissions": [
  "activeTab",
  "contextMenus"
],
```

After making these changes, reload your extension in `edge://extensions` by clicking the reload icon (circular arrow) next to your extension. Now, when you right-click on a text input box, you should see a context menu item labeled "Toggle resizable textarea" that will allow you to toggle the resizable property of the text input box.